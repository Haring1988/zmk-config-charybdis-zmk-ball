#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&mt {
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
            timeout-ms = <50>;
        };

        bk {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
            timeout-ms = <50>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <20 21>;
            timeout-ms = <50>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
            timeout-ms = <50>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <29 28>;
            timeout-ms = <50>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <2 3>;
            timeout-ms = <50>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <12 13>;
        };

        pu {
            bindings = <&kp PAGE_UP>;
            key-positions = <6 7>;
        };

        pd {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <16 17>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        KEY: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp RET>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp Q                   &kp W      &kp E             &kp R           &kp T      &kp Y    &kp U  &kp I            &kp O      &kp P
&kp A                   &kp S      &kp D             &kp F           &lt 4 G    &lt 4 H  &kp J  &kp K            &kp L      &kp ENTER
&lt 3 Z                 &kp X      &kp C             &kp V           &kp B      &kp N    &kp M  &kp COMMA        &kp DOT    &mt RIGHT_SHIFT SLASH
&mt RIGHT_ALT CAPSLOCK  &kp LSHFT  &mt LCTRL DELETE  &lt 2 LEFT_WIN  &lt 6 TAB                  &lt 1 BACKSPACE  &kp SPACE  &to 5
            >;
        };

        Lower {
            label = "Lower";
            bindings = <
&kp LS(N1)     &kp LS(N2)     &kp LS(N3)       &kp LS(N4)  &kp LS(N5)  &kp LS(N6)    &kp LS(N7)    &kp LS(N8)     &kp LS(N9)    &kp LS(N0)
&kp LS(MINUS)  &kp LS(EQUAL)  &kp INSERT       &trans      &trans      &kp LS(BSLH)  &kp LS(LBKT)  &kp LS(RBKT)   &kp LS(SEMI)  &kp LS(APOS)
&kp LS(GRAVE)  &trans         &kp PRINTSCREEN  &trans      &trans      &trans        &trans        &kp LS(COMMA)  &kp LS(DOT)   &kp LS(FSLH)
&trans         &trans         &trans           &trans      &trans                                  &trans         &trans        &trans
            >;
        };

        Raise {
            label = "Raise";
            bindings = <
&kp N1     &kp N2          &kp N3      &kp N4        &kp N5           &kp N6    &kp N7    &kp N8         &kp N9     &kp N0
&kp MINUS  &kp EQUAL       &kp F2      &kp F5        &trans           &kp BSLH  &kp LBKT  &kp RBKT       &kp SEMI   &kp APOS
&kp GRAVE  &kp C_MUTE      &KEY        &kp C_VOL_DN  &kp C_VOLUME_UP  &trans    &trans    &none          &none      &none
&trans     &kp LEFT_SHIFT  &kp DELETE  &trans        &trans                               &kp BACKSPACE  &kp SPACE  &trans
            >;
        };

        Shortcut {
            label = "shortcut";
            bindings = <
&kp LEFT_ARROW  &kp RIGHT_ARROW  &kp N7  &kp N8   &kp N9  &kp EQUAL  &kp MINUS  &kp N8    &kp FSLH  &kp BSPC
&kp DELETE      &kp BSPC         &kp N4  &kp N5   &kp N6  &kp EQUAL  &kp N9     &kp N0    &trans    &kp ENTER
&trans          &kp ENTER        &kp N1  &kp N2   &kp N3  &trans     &trans     &trans    &kp LALT  &kp TAB
&trans          &trans           &kp N0  &kp DOT  &trans                        &kp LGUI  &trans    &trans
            >;
        };

        Game {
            label = "Game";
            bindings = <
&bt BT_CLR      &none          &kp UP_ARROW  &none         &none         &bt BT_CLR      &none           &kp UP_ARROW    &none            &bootloader
&none           &kp LEFT       &kp DOWN      &kp RIGHT     &none         &none           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&bt BT_CLR_ALL  &bt BT_NXT     &bt BT_PRV    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR_ALL  &bt BT_NXT      &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2
&bt BT_DISC 1   &bt BT_DISC 0  &bt BT_SEL 2  &out OUT_BLE  &out OUT_USB                                  &out OUT_USB    &kp BSPC         &out OUT_BLE
            >;
        };

        Mouse {
            bindings = <
&none  &none      &none      &none      &none  &none  &none      &none      &none      &none
&none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &none  &none  &mkp LCLK  &mkp MCLK  &mkp RCLK  &none
&none  &none      &none      &none      &none  &none  &none      &none      &none      &none
&none  &none      &none      &none      &none                    &none      &none      &to 0
            >;
        };

        layer_6 {
            bindings = <
&kp LC(J)      &none  &none      &kp LC(Y)  &kp LG(TAB)  &none  &none  &none  &none  &none
&kp LA(LC(A))  &none  &kp LG(D)  &none      &kp LG(L)    &none  &none  &none  &none  &none
&none          &none  &none      &none      &none        &none  &none  &none  &none  &none
&none          &none  &none      &none      &none                      &none  &none  &none
            >;
        };
    };
};
